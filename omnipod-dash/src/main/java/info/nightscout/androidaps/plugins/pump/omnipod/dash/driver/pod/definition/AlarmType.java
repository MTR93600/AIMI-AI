package info.nightscout.androidaps.plugins.pump.omnipod.dash.driver.pod.definition;

public enum AlarmType {
    NONE((byte) 0x00),
    ALARM_PW_FLASH_ERASE((byte) 0x01),
    ALARM_PW_FLASH_WRITE((byte) 0x02),
    ALARM_BASAL_CKSUM((byte) 0x03),
    ALARM_BASAL_PPULSE((byte) 0x04),
    ALARM_BASAL_STEP((byte) 0x05),
    ALARM_AUTO_WAKEUP_TIMEOUT((byte) 0x06),
    ALARM_WIRE_OVERDRIVEN((byte) 0x07),
    ALARM_BEEP_REP_INVALID_INDEX((byte) 0x08),
    ALARM_INVALID_REP_PATTERN((byte) 0x09),
    ALARM_TEMP_BASAL_STEP((byte) 0x0a),
    ALARM_TEMP_BASAL_CKSUM((byte) 0x0b),
    ALARM_BOLUS_OVERFLOW((byte) 0x0c),
    ALARM_COP_RESET((byte) 0x0d),
    ALARM_ILOP_RESET((byte) 0x0e),
    ALARM_ILAD_RESET((byte) 0x0f),
    ALARM_SAWCOP_RESET((byte) 0x10),
    ALARM_BOLUS_STEP((byte) 0x11),
    ALARM_LVD_RESET((byte) 0x12),
    ALARM_INVALID_RF_MSG_LENGTH((byte) 0x13),
    ALARM_OCCLUDED((byte) 0x14),
    ALARM_BOLUSPROG_CHKSUM((byte) 0x15),
    ALARM_BOLUS_LOG((byte) 0x16),
    ALARM_CRITICAL_VAR((byte) 0x17),
    ALARM_EMPTY_RESERVOIR((byte) 0x18),
    ALARM_LOADERR((byte) 0x19),
    ALARM_PSA_FAILURE((byte) 0x1a),
    ALARM_TICKCNT_NOT_CLEARED((byte) 0x1b),
    ALARM_PUMP_EXPIRED((byte) 0x1c),
    ALARM_COMD_BIT_NOT_SET((byte) 0x1d),
    ALARM_INVALID_COMD_SET((byte) 0x1e),
    ALARM_ALERTS_ARRAY_CKSM((byte) 0x1f),
    ALARM_UNIT_TEST((byte) 0x20),
    ALARM_TICK_TIME_ERROR((byte) 0x21),
    ALARM_CRITICAL_HAZARD((byte) 0x22),
    ALARM_PIEZO_FREQ((byte) 0x23),
    ALARM_TICKCNT_ERROR_RTC((byte) 0x24),
    ALARM_TICK_FAILURE((byte) 0x25),
    ALARM_INVALID((byte) 0x26),
    ALARM_LUMP_ALERT_PROGRAM((byte) 0x27),
    ALARM_INVALID_PASS_CODE((byte) 0x28),
    ALARM_ALERT0((byte) 0x29),
    ALARM_ALERT1((byte) 0x2a),
    ALARM_ALERT2((byte) 0x2b),
    ALARM_ALERT3((byte) 0x2c),
    ALARM_ALERT4((byte) 0x2d),
    ALARM_ALERT5((byte) 0x2e),
    ALARM_ALERT6((byte) 0x2f),
    ALARM_ALERT7((byte) 0x30),
    ALARM_ILLEGAL_PUMP_STATE((byte) 0x31),
    ALARM_COP_TEST_FAILURE((byte) 0x32),
    ALARM_MCTF((byte) 0x33),
    ALARM_ILLEGAL_RESET((byte) 0x34),
    ALARM_VETO_NOT_SET((byte) 0x35),
    ALARM_ILLEGAL_PIN_RESET((byte) 0x36),
    ALARM_INVALID_BEEP_PATTERN((byte) 0x37),
    ALARM_WIRE_STATE_MACHINE((byte) 0x38),
    ALARM_VETO_TEST_DEFAULT((byte) 0x39),
    ALARM_ALERT_INVALID_INDEX((byte) 0x3a),
    ALARM_SAWCOP_TEST_FAIL((byte) 0x3b),
    ALARM_MCUCOP_TEST_FAIL((byte) 0x3c),
    ALARM_STEP_SENSOR_SHORTED((byte) 0x3d),
    ALARM_FLASH_FAILURE((byte) 0x3e),
    ALARM_SPARE63((byte) 0x3f),
    ALARM_SS_OPEN_CNT_EXCEEDED((byte) 0x40),
    ALARM_SS_EXCESSIVE_SUMMED((byte) 0x41),
    ALARM_SS_MIN_PULSE_TRANSITION((byte) 0x42),
    ALARM_SS_DEFAULT((byte) 0x43),
    ALARM_OPEN_WIRE1((byte) 0x44),
    ALARM_OPEN_WIRE2((byte) 0x45),
    ALARM_LOADERR_FAILURE((byte) 0x46),
    ALARM_SAW_VETO_FAILURE((byte) 0x47),
    ALARM_BAD_RFM_CLOCK((byte) 0x48),
    ALARM_BAD_TICK_HIGH((byte) 0x49),
    ALARM_BAD_TICK_PERIOD((byte) 0x4a),
    ALARM_BAD_TRIM_VALUE((byte) 0x4b),
    ALARM_BAD_BUS_CLOCK((byte) 0x4c),
    ALARM_BAD_CAL_MODE((byte) 0x4d),
    ALARM_SAW_TRIM_ERROR((byte) 0x4e),
    ALARM_RFM_CRYSTAL_ERROR((byte) 0x4f),
    ALARM_CALST_TIMEOUT((byte) 0x50),
    ALARM_TICKCNT_ERROR((byte) 0x51),
    ALARM_BAD_RFM_XTAL_START((byte) 0x52),
    ALARM_BAD_RX_SENSENSITIVITY((byte) 0x53),
    ALARM_BAD_TX_PKT_SIZE((byte) 0x54),
    ALARM_TICK_LOW_PHASE_EXCEEDED((byte) 0x55),
    ALARM_TICK_HIGH_PHASE_EXCEEDED((byte) 0x56),
    ALARM_OCCL_CRITVAR_FAIL((byte) 0x57),
    ALARM_OCCL_PARAM((byte) 0x58),
    ALARM_PROG_OCCL_FAIL((byte) 0x59),
    ALARM_PW_TO_HIGH_FOR_OCCL_DET((byte) 0x5a),
    ALARM_OCCL_CSUM((byte) 0x5b),
    ALARM_PRIME_OPEN_CNT_TO_LOW((byte) 0x5c),
    ALARM_BAD_RF_CDTHR((byte) 0x5d),
    ALARM_FLASH_NOT_SECURE((byte) 0x5e),
    ALARM_WIRE_TEST_OPEN_GROUND((byte) 0x5f),
    ALARM_OCCL_STARTUP1((byte) 0x60),
    ALARM_OCCL_STARTUP2((byte) 0x61),
    ALARM_OCCL_EXCESS_TIMEOUTS1((byte) 0x62),
    ALARM_SPARE99((byte) 0x63),
    ALARM_SPARE100((byte) 0x64),
    ALARM_SPARE101((byte) 0x65),
    ALARM_OCCL_EXCESS_TIMEOUTS2((byte) 0x66),
    ALARM_OCCL_EXCESS_TIMEOUTS3((byte) 0x67),
    ALARM_OCCL_NOISY_PULSE_WIDTHS((byte) 0x68),
    ALARM_OCCL_AT_BOLUS_END((byte) 0x69),
    ALARM_OCCL_ABOVE_THRESHOLD((byte) 0x6a),
    ALARM_BASAL_UNDERINFUSION((byte) 0x80),
    ALARM_BASAL_OVERINFUSION((byte) 0x81),
    ALARM_TEMP_UNDERINFUSION((byte) 0x82),
    ALARM_TEMP_OVERINFUSION((byte) 0x83),
    ALARM_BOLUS_UNDERINFUSION((byte) 0x84),
    ALARM_BOLUS_OVERINFUSION((byte) 0x85),
    ALARM_BASAL_OVERINFUSION_PULSE((byte) 0x86),
    ALARM_TEMP_OVERINFUSION_PULSE((byte) 0x87),
    ALARM_BOLUS_OVERINFUSION_PULSE((byte) 0x88),
    ALARM_IMMBOLUS_UNDERINFUSION_PULSE((byte) 0x89),
    ALARM_EXTBOLUS_OVERINFUSION_PULSE((byte) 0x8a),
    ALARM_PROGRAM_CSUM((byte) 0x8b),
    ALARM_UNUSED_140((byte) 0x8c),
    ALARM_UNRECOGNIZED_PULSE((byte) 0x8d),
    ALARM_SYNC_WITHOUT_TEMP_ACTIVE((byte) 0x8e),
    ALARM_INTERLOCK_LOAD((byte) 0x8f),
    ALARM_ILLEGAL_CHAN_PARAM((byte) 0x90),
    ALARM_BASAL_PULSE_CHAN_INACTIVE((byte) 0x91),
    ALARM_TEMP_PULSE_CHAN_INACTIVE((byte) 0x92),
    ALARM_BOLUS_PULSE_CHAN_INACTIVE((byte) 0x93),
    ALARM_INT_SEMAPHORE_NOT_SET((byte) 0x94),
    ALARM_ILLEGAL_INTERLOCK_CHAN((byte) 0x95),
    ALARM_TERMINATE_BOLUS((byte) 0x96),
    ALARM_OPEN_TRANSITIONS_COUNT((byte) 0x97),
    ALARM_BLE_TO((byte) 0xa0),
    ALARM_BLE_INITIATED((byte) 0xa1),
    ALARM_BLE_UNK_ALARM((byte) 0xa2),
    ALARM_UNUSED_163((byte) 0xa3),
    ALARM_UNUSED_164((byte) 0xa4),
    ALARM_UNUSED_165((byte) 0xa5),
    ALARM_BLE_IAAS((byte) 0xa6),
    ALARM_UNUSED_167((byte) 0xa7),
    ALARM_CRC_FAILURE((byte) 0xa8),
    ALARM_BLE_WD_PING_TIMEOUT((byte) 0xa9),
    ALARM_BLE_EXCESSIVE_RESETS((byte) 0xaa),
    ALARM_BLE_NAK_ERROR((byte) 0xab),
    ALARM_BLE_REQ_HIGH_TIMEOUT((byte) 0xac),
    ALARM_BLE_UNKNOWN_RESP((byte) 0xad),
    ALARM_BLE_UNUSED_174((byte) 0xae),
    ALARM_BLE_REQ_STUCK_HIGH((byte) 0xaf),
    ALARM_BLE_STATE_MACHINE_1((byte) 0xb1),
    ALARM_BLE_STATE_MACHINE_2((byte) 0xb2),
    ALARM_BLE_UNUSED_179((byte) 0xb3),
    ALARM_BLE_ARB_LOST((byte) 0xb4),
    ALARM_BLE_ER48_DUAL_NACK((byte) 0xc0),
    ALARM_BLE_QN_EXCEED_MAX_RETRY((byte) 0xc1),
    ALARM_BLE_QN_CRIT_VAR_FAIL((byte) 0xc2),
    UNKNOWN((byte) 0xff);

    private byte value;

    AlarmType(byte value) {
        this.value = value;
    }

    public static AlarmType byValue(byte value) {
        for (AlarmType type : values()) {
            if (type.value == value) {
                return type;
            }
        }
        return UNKNOWN;
    }
}
